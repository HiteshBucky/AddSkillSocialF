[{"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\index.js":"1","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\Routes.js":"2","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Signup.js":"3","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Home.js":"4","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Signin.js":"5","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\auth\\helper\\index.js":"6","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\core\\Menu.js":"7","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\backend.js":"8","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\core\\helper\\coreapicalls.js":"9","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\PostContainer.js":"10","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\RandomUser.js":"11","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Profile.js":"12","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\auth\\helper\\PrivateRoutes.js":"13","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Followers.js":"14","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Following.js":"15","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Comments.js":"16","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\People.js":"17","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\UserBox.js":"18","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\UpdateProfile.js":"19","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\PrivatePost.js":"20","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\PostUpdate.js":"21","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\ForgetPassword.js":"22","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\ResetPassword.js":"23"},{"size":183,"mtime":1611440275629,"results":"24","hashOfConfig":"25"},{"size":1797,"mtime":1611695072082,"results":"26","hashOfConfig":"25"},{"size":3685,"mtime":1611671842876,"results":"27","hashOfConfig":"25"},{"size":2759,"mtime":1611644405772,"results":"28","hashOfConfig":"25"},{"size":3067,"mtime":1611672270837,"results":"29","hashOfConfig":"25"},{"size":1508,"mtime":1611390730294,"results":"30","hashOfConfig":"25"},{"size":1800,"mtime":1611529616141,"results":"31","hashOfConfig":"25"},{"size":51,"mtime":1610625430730,"results":"32","hashOfConfig":"25"},{"size":5185,"mtime":1611693636800,"results":"33","hashOfConfig":"25"},{"size":1788,"mtime":1611648252863,"results":"34","hashOfConfig":"25"},{"size":4188,"mtime":1611650117157,"results":"35","hashOfConfig":"25"},{"size":4000,"mtime":1611648117108,"results":"36","hashOfConfig":"25"},{"size":490,"mtime":1611413782243,"results":"37","hashOfConfig":"25"},{"size":3149,"mtime":1611643513382,"results":"38","hashOfConfig":"25"},{"size":1948,"mtime":1611566793665,"results":"39","hashOfConfig":"25"},{"size":6384,"mtime":1611650126446,"results":"40","hashOfConfig":"25"},{"size":2369,"mtime":1611650114935,"results":"41","hashOfConfig":"25"},{"size":1653,"mtime":1611650122426,"results":"42","hashOfConfig":"25"},{"size":2854,"mtime":1611650118821,"results":"43","hashOfConfig":"25"},{"size":2284,"mtime":1611648487514,"results":"44","hashOfConfig":"25"},{"size":2127,"mtime":1611650124363,"results":"45","hashOfConfig":"25"},{"size":2420,"mtime":1611696754059,"results":"46","hashOfConfig":"25"},{"size":2205,"mtime":1611696618083,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"9i7n7v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"50"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\index.js",[],["112","113"],"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\Routes.js",["114","115","116"],"import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Signup from \"./user/Signup\";\r\nimport Signin from \"./user/Signin\";\r\nimport ForgetPassword from \"./user/ForgetPassword\";\r\nimport ResetPassword from \"./user/ResetPassword\";\r\nimport Home from './user/Home'\r\nimport RandomUser from './user/RandomUser'\r\nimport Profile from './user/Profile'\r\nimport Followers from './user/Followers'\r\nimport Following from './user/Following'\r\nimport Comments from './user/Comments';\r\nimport People from './user/People';\r\nimport UpdateProfile from './user/UpdateProfile'\r\nimport PostUpdate from './user/PostUpdate'\r\n\r\n//Private Route\r\nimport PrivateRoute from \"./auth/helper/PrivateRoutes\";\r\n\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n\r\n        //Home\r\n        <Route path=\"/\" exact component={Home} />\r\n\r\n        //Auth\r\n        <Route path=\"/signup\" exact component={Signup} />\r\n        <Route path=\"/signin\" exact component={Signin} />\r\n        <Route path=\"/forgetpassword\" exact component={ForgetPassword} />\r\n        <Route path=\"/resetpassword\" exact component={ResetPassword} />\r\n\r\n        //Profile\r\n        <Route path='/user' exact component={RandomUser} />\r\n        <Route path='/users' exact component={People} />\r\n        <Route path='/comments' exact component={Comments} />\r\n\r\n        <PrivateRoute path=\"/profile\" exact component={Profile} />\r\n        <PrivateRoute path=\"/update\" exact component={UpdateProfile} />\r\n        <PrivateRoute path=\"/followers\" exact component={Followers} />\r\n        <PrivateRoute path=\"/following\" exact component={Following} />\r\n        <PrivateRoute path=\"/post/update\" exact component={PostUpdate} />\r\n        \r\n      </Switch>\r\n    </BrowserRouter>\r\n   )\r\n}\r\n\r\nexport default Routes;","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Signup.js",["117"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signup } from \"../auth/helper\";\r\nimport Menu from \"../core/Menu\"\r\n\r\nvar x = parseInt(Math.random()*10), y = parseInt(Math.random()*10), result = x + y;\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({ username: \"\", email: \"\", password: \"\", error: \"\", success: false });\r\n  const { username, email, password, error, success } = values;\r\n  const handleChange = name => event => setValues({ ...values, error: false, [name]: event.target.value });\r\n  \r\n  const [answer, setAnswer] = useState('');\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    signup({ username, email, password })\r\n      .then( data => \r\n      {\r\n        if (data.error) \r\n          setValues({ ...values, error: data.error, success: false });\r\n        \r\n        else \r\n          setValues({...values, username: \"\", email: \"\", password: \"\", error: \"\", success: true});\r\n        \r\n      })\r\n      .catch(console.log(\"Error in signup\"));\r\n  };\r\n\r\n  const handleCheck = (e) => {\r\n    console.log(e.target.value)\r\n    setAnswer(e.target.value);\r\n    setIsCorrect(e.target.value == result);\r\n    console.log(\"answer \", answer , \"result\" , isCorrect)\r\n  }\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <div>\r\n      <div style={{'margin-top' : '10%'}}><h1>Signup</h1></div>\r\n        {successMessage()}\r\n        {errorMessage()}\r\n      <div className=\"row mt-4\">\r\n\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input className=\"form-control\" onChange={handleChange(\"username\")} type=\"text\" value={username} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input className=\"form-control\" onChange={handleChange(\"email\")} type=\"email\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input onChange={handleChange(\"password\")} className=\"form-control\" type=\"password\" value={password} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              What is {x} + {y} = ? \r\n              <input className=\"ml-2\" type=\"Number\" value={answer} onChange={e => handleCheck(e)} />\r\n            </div>\r\n\r\n            <button disabled={!isCorrect} onClick={onSubmit} className=\"btn btn-success btn-block\"> Submit </button>\r\n\r\n          </form>\r\n\r\n          <Link to=\"/signup\"><center className=\"mt-3\">Already have a Account \r\n          </center></Link>\r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div className=\"alert alert-success\" style={{ display: success ? \"\" : \"none\" }} >\r\n            New account was created successfully. Please <Link to=\"/signin\">Login Here</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div className=\"alert alert-danger\" style={{ display: error ? \"\" : \"none\" }} >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <Menu />\r\n\r\n      <div className=\"center container col-lg-8 col-md-8\">\r\n        {signUpForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Home.js",["118","119","120","121","122","123","124"],"import React, {useState, useEffect} from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from 'react-moment'\r\n\r\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\r\nimport Menu from '../core/Menu'\r\nimport { getPostList, createPost } from '../core/helper/coreapicalls';\r\nimport PostContainer from './PostContainer'\r\n\r\n\r\nfunction Home() {\r\n\tlet history = useHistory();\r\n\r\n\tconst [postList, setPostList] = useState([]);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [reload, setReload] = useState(false);\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPostList(pageNumber).then(x => {\r\n\t\t\tif(x.error) setError(true);\r\n\t\t\telse {\r\n\t\t\t\tif(x.length == 0) {\r\n\t\t\t\t\tsetPageNumber(1); //If user reaches last post, just redrect to page1\r\n\t\t\t\t}\r\n\t\t\t\tsetPostList(x)\r\n\t\t\t}\r\n\t\t})\r\n\t}, [reload, setReload, pageNumber]);\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tsetReload(false);\r\n\t\tif(isAutheticated()) {\r\n\t\t\tif(description.length < 1) { //If length is 0, just return;\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcreatePost(description).then(x => {\r\n\t\t\t\tif(x.error) setError(x.error)\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetDescription('');\r\n\t\t\t\t\tsetReload(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\thistory.push('/signin');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<Menu />\r\n\t\t<div className=\"row\">\r\n\r\n\t\t\t<div className=\"share border bg-white col-8 feed-post mt-2 border offset-2\">\r\n\t\t\t    <form action='/signin' method=\"post\">\r\n\t\t\t\t    <div className=\"d-flex flex-row inputs p-2 py-4\">\r\n\t\t\t\t      <img className=\"rounded-circle\" src=\"https://i.imgur.com/44HzzUN.jpg\" width=\"60\" />\r\n\t\t\t\t      <input type=\"text\" required value={description} onChange={e => setDescription(e.target.value)} name=\"description\" className=\"border-0 form-control share-input mt-4 ml-4 mb-4\" placeholder=\"Share your thoughts\" />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\" flex-row  border-top\">\r\n\t\t\t\t        <div className=\"publish-button\">\r\n\t\t\t\t        \t<button className=\"align-items-center float-right btn btn-dark btn-block mb-2\" onClick={e => handleSubmit(e)}>Post</button>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    </div>\r\n\t\t        </form>\r\n\t\t\t</div>\r\n\r\n\t\t    { postList.map((post, index) => {\r\n\t\t      return (\r\n\t\t        <div key={index} className=\"col-8 mb-4 offset-2\">\r\n\t\t          <PostContainer key={index} post={post}  reload={reload} setReload={setReload} />\r\n\t\t        </div>\r\n\t\t      );\r\n\t\t    }) }\r\n\t\t    \r\n\t\t</div>\r\n\r\n\t\t<div className=\"btn btn-block btn-danger col-8 offset-2\" style={{'margin-bottom' : '10%'}}> \r\n\t\t    <div onClick={e => setPageNumber(pageNumber + 1)}> Next Page </div> \r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Home;","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Signin.js",["125"],"import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport Menu from \"../core/Menu\"\r\n\r\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\r\n\r\nconst Signin = () => {\r\n  const [values, setValues] = useState({ email: \"\", password: \"\", error: \"\", loading: false, didRedirect: false });\r\n\r\n  const { email, password, error, loading, didRedirect } = values;\r\n  const { user } = isAutheticated();\r\n\r\n  const handleChange = name => event => setValues({ ...values, error: false, [name]: event.target.value });\r\n\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    signin({ email, password })\r\n      .then(data => {\r\n        console.log('data', data)\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, loading: false });\r\n        } else {\r\n          authenticate(data, () => setValues({ ...values, didRedirect: true }));\r\n        }\r\n      })\r\n      .catch(console.log(\"Signin request failed\"));\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (didRedirect) {\r\n      return <Redirect to={\"/\" } />;\r\n    }\r\n    if (isAutheticated()) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n  };\r\n\r\n  const loadingMessage = () => {\r\n    return (\r\n      loading && (\r\n        <div className=\"alert alert-info\"> <h2>Loading...</h2> </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div className=\"alert alert-danger\" style={{ display: error ? \"\" : \"none\" }} >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const signInForm = () => {\r\n    return (\r\n\r\n      <div>\r\n      <div style={{'margin-top' : '10%'}}><h1>Signin</h1></div>\r\n        {loadingMessage()}\r\n        {errorMessage()}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input onChange={handleChange(\"email\")} value={email} className=\"form-control\" type=\"email\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input onChange={handleChange(\"password\")} value={password}className=\"form-control\"type=\"password\" />\r\n            </div>\r\n\r\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">Submit</button>\r\n          </form>\r\n\r\n          <Link to=\"/forgetpassword\"><center className=\"mt-3\">Forget Password</center></Link>\r\n\r\n          <Link to=\"/signup\"><center className=\"mt-3\">Don't Have an account</center></Link>\r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <Menu />\r\n      <div className=\"center container col-lg-8 col-md-8\">\r\n        \r\n        {signInForm()}\r\n        {performRedirect()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\core\\Menu.js",[],"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\backend.js",[],["126","127"],"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\core\\helper\\coreapicalls.js",["128"],"import { API } from \"../../backend\";\r\nimport { isAutheticated } from \"../../auth/helper\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const getPostList = (pageNumber) => {\r\n  \treturn fetch(`${API}/post/page/${pageNumber}`, { method: \"GET\"})\r\n    \t\t.then(response => response.json())\r\n    \t\t.catch(err => console.log(err))\r\n};\r\n\r\nexport const getPostInfo = (postId) => {\r\n    return fetch(`${API}/post/${postId}`, { method: \"GET\"})\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const handleForgetPassword = email => {\r\n    return fetch(`${API}/forgetpassword`, {\r\n        method: \"post\",\r\n        headers: { Accept: \"application/json\", 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ email : email })\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const handleResetPassword = (id, token, password) => {\r\n    return fetch(`${API}/resetpassword/${id}/${token}`, {\r\n        method: \"post\",\r\n        headers: { Accept: \"application/json\", 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ password : password })\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err));\r\n}\r\nexport const getUserDetails = (userId) => {\r\n\treturn fetch(`${API}/users/${userId}`, { method: \"GET\"})\r\n    \t\t.then(response => response.json())\r\n    \t\t.catch(err => console.log(err))\r\n};\r\n\r\nexport const getAllPostOfUser = (userId) => {\r\n\treturn fetch(`${API}/posts/${userId}`, { method: \"GET\"})\r\n    \t\t.then(response => response.json())\r\n    \t\t.catch(err => console.log(err))\r\n};\r\n\r\nexport const updateUserInfo = (data) => {\r\n    delete data.error\r\n    const userId = isAutheticated().user._id\r\n    return fetch(`${API}/update/${userId}`, {\r\n        method: \"put\",\r\n        headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data)\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nexport const updatePost = (data, postId) => {\r\n    if(isAutheticated() == false) return <Redirect to=\"/home\" />;\r\n\r\n    const userId = isAutheticated().user._id\r\n\r\n    const val = {};\r\n    val.description = data;\r\n\r\n    return fetch(`${API}/postupdate/${userId}/${postId}`, {\r\n        method: \"put\",\r\n        headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(val)\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const getAllUser = () => {\r\n    return fetch(`${API}/users/`, { method: \"GET\"})\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const getfollowingList = (userId) => {\r\n    return fetch(`${API}/users/following/${userId}`, { method: \"GET\"})\r\n            .then(response => response.json())\r\n            .catch(err => console.log(err))\r\n};\r\n\r\nexport const getFollwerList = (userId) => {\r\n    return fetch(`${API}/users/followers/${userId}`, { method: \"GET\"})\r\n            .then(response => response.json())\r\n            .catch(err => console.log(err))\r\n};\r\n\r\nexport const createPost = (description) => {\r\n    const userId = isAutheticated().user._id;\r\n    return fetch(`${API}/createpost/${userId}`, {\r\n        method: \"post\",\r\n        headers: { Accept: \"application/json\", 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ description : description })\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const getAllComments = (postId) => {\r\n    return fetch(`${API}/comments/${postId}`, { method: \"GET\"})\r\n            .then(response => response.json())\r\n            .catch(err => console.log(err))\r\n}\r\n\r\nexport const createComments = (description, postId) => {\r\n    const userId = isAutheticated().user._id;\r\n\r\n    return fetch(`${API}/creatcomment/${userId}/${postId}`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ description : description })\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport const checkIfuserFollow = toId => {\r\n    const userId = isAutheticated().user._id;\r\n    return fetch(`${API}/checkfollow/${userId}/${toId}`, { method: \"GET\"})\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const createFollow = toId => {\r\n    const userId = isAutheticated().user._id;\r\n    return fetch(`${API}/createfollow/${userId}/${toId}`, { method: \"POST\"})\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const createUnFollow = toId => {\r\n    const userId = isAutheticated().user._id;\r\n    return fetch(`${API}/createUnfollow/${userId}/${toId}`, { method: \"POST\"})\r\n        .then(response => response.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\PostContainer.js",["129","130"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from 'react-moment'\r\n\r\nimport Menu from '../core/Menu'\r\n\r\n\r\n\r\nfunction PostContainer (props) {\r\n\r\n\treturn (\r\n\t\t<div className=\"feed-post mt-2 border\">\r\n\t\t    <div className=\"p-2 bg-white\">\r\n\t\t        <div className=\"d-flex flex-row justify-content-between align-items-start profile\">\r\n\t\t        \t<Link to={{ pathname: '/user' , state : {id : props.post.createdBy} }}>\r\n\t\t\t            <div className=\"d-flex align-items-center\">\r\n\t\t\t              <img className=\"rounded-circle img-responsive\" src=\"https://i.imgur.com/44HzzUN.jpg\" width=\"50\" height=\"50\" />\r\n\t\t\t              <div className=\"d-flex flex-column ml-2\"> <h6>{props.post.userData[0].username}</h6></div>\r\n\t\t\t            </div>\r\n\t\t            </Link>\r\n\t\t\t        <div className=\"ml-2 float-right float-lg-right\"> \r\n\t\t\t        \t<h6><Moment fromNow>{props.post.createdAt}</Moment></h6>\r\n\t\t\t        </div>\r\n\r\n\t\t        </div>\r\n\r\n\t\t        <div className=\"profile-content mt-4 mb-4\">\r\n\t\t          <span><h5>{props.post.description}</h5></span>\r\n\t\t        </div>\r\n\t\t        <hr/>\r\n\t\t        <div className=\"profile-engagements\">\r\n\t\t          <div className=\"d-flex justify-content-between align-items-center\">\r\n\t\t            <div className=\"d-flex flex-row icons d-flex align-items-center\">\r\n\t\t              <span><i className=\"fa fa-heart\"></i> Likes</span> \r\n\t\t            </div>\r\n\t\t            <Link to={{ pathname: '/comments' , state : {post : props.post} }}>\r\n\t\t\t            <div className=\"d-flex flex-row muted-color\"> \r\n\t\t\t              <span><i className=\"fa fa-comment\"></i> comments</span>\r\n\t\t\t            </div>\r\n\t\t            </Link>\r\n\t\t          </div>\r\n\t\t        </div>\r\n\t\t    </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PostContainer","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\RandomUser.js",["131","132","133","134","135","136","137"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router\"\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nimport Menu from \"../core/Menu\"\r\nimport PostContainer from './PostContainer'\r\n\r\nimport {getUserDetails, getAllPostOfUser, checkIfuserFollow, createFollow, createUnFollow} from '../core/helper/coreapicalls'\r\nimport { isAutheticated } from \"../auth/helper\";\r\n\r\n\r\nfunction RandomProfile() {\r\n\r\n\tlet  userId  = useLocation()?.state?.id;\r\n\tlet history = useHistory();\r\n\r\n\tconst [isLoadingUserDetail, setLoadingUserDetail] = useState(true);\r\n\tconst [isLoadingPostList, setLoadingPostList] = useState(true);\r\n\tconst [reload, setReload] = useState(false);\r\n\r\n\tconst [userdata, setUserData] = useState({});\r\n\tconst [allpost, setAllPost] = useState([]);\r\n\r\n\tconst [isFollwing, setIsFollowing] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!userId) { return history.push('/'); }\r\n\r\n\t\tsetLoadingUserDetail(true);\r\n\t\tgetUserDetails(userId).then(x => {\r\n\t\t\tif(x.error) alert(\"Error!! Cant find user\");\r\n\t\t\telse {\r\n\t\t\t\tsetUserData(x);\r\n\t\t\t\tsetLoadingUserDetail(false);\r\n\t\t\t}\r\n\t\t})\r\n\t}, [isFollwing]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!userId){ console.log(\"HEllo 2\"); return history.push('/') }\r\n\r\n\t\tsetLoadingPostList(true);\r\n\t\tgetAllPostOfUser(userId).then(x => {\r\n\t\t\tif(x.error) alert(\"Error\", x.error)\r\n\t\t\telse {\r\n\t\t\t\tsetAllPost(x);\r\n\t\t\t\tsetLoadingPostList(false);\r\n\t\t\t}\r\n\t\t})\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!userId) { return history.push('/'); }\r\n\r\n\t\tif(isAutheticated() == false) {\r\n\t\t\treturn setIsFollowing(false)\r\n\t\t}else{\r\n\t\t\tcheckIfuserFollow(userId).then(x => {\r\n\t\t\t\tif(x.error) return alert(`Error!! ${x.error}`)\r\n\t\t\t\telse{\r\n\t\t\t\t\tsetIsFollowing(x.follow)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [])\r\n\r\n\tfunction handleFollow() {\r\n\t\tif( !isAutheticated()) return history.push('/signup')\r\n\t\tcreateFollow(userId).then(x => {\r\n\t\t\tif(x.error) return alert(`Error!! ${x.error}`)\r\n\t\t\treturn setIsFollowing(true);\r\n\t\t})\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction handleUnfollow() {\r\n\t\tcreateUnFollow(userId).then(x => {\r\n\t\t\tif(x.error) return alert(`Error!! ${x.error}`)\r\n\t\t\treturn setIsFollowing(false);\r\n\t\t})\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction leftPannel() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-4\">\r\n\t\t\t  \t<div className=\"card text-white bg-dark border border-info \">\r\n\t\t\t\t    <div className=\"card-header lead d-flex justify-content-between align-items-center\">\r\n\t\t\t\t    \t<h4 className=\"d-flex flex-row\">@{userdata.username}</h4>\r\n\r\n\t\t\t\t    \t{isFollwing ? \r\n\t\t\t\t    \t\t<button className=\"btn btn-danger d-flex flex-row\" onClick={handleUnfollow}>Unfollow</button> \r\n\t\t\t\t    \t\t: \r\n\t\t\t\t    \t\t<button className=\"btn btn-primary d-flex flex-row\" onClick={handleFollow}>Follow</button>\r\n\t\t\t\t    \t}\r\n\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"card-body\">\r\n\t\t\t\t      \t<div className=\"rounded border border-white p-2\">\r\n\t\t\t\t           \t<img src=\"https://i.imgur.com/UXdKE3o.jpg\" style={{ maxHeight: \"50%\", maxWidth: \"100%\" }} className=\"mb-3 rounded\" />\r\n\t\t\t\t        </div>\r\n\t\t\t\t      \t<p className=\"lead bg-white font-weight-bold text-dark text-wrap\"><center>{userdata.email}</center></p>\r\n\r\n\t\t\t\t      \t<hr/>\r\n\t\t\t\t      \t<div className=\"d-flex justify-content-around\"><h5 className=\"text-light float-left\">Posts {userdata.posts.length}</h5></div><hr/>\r\n\t\t\t\t      \t<div className=\"d-flex justify-content-around\"><h5 className=\"text-light\">Followers {userdata.followers.length}</h5></div><hr/>\r\n\t\t\t\t      \t<div className=\"d-flex justify-content-around\"><h5 className=\"text-light\">Follows {userdata.follows.length}</h5></div><hr/>\r\n\t\t\t\t    </div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tfunction rightPannel() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-8\">\r\n\t\t\t\t{ allpost.map((post, index) => {\r\n\t\t\t\t  return (\r\n\t\t\t\t    <div key={index} className=\"col-\">\r\n\t\t\t\t      <PostContainer key={index} post={post} reload={reload} setReload={setReload} />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  );\r\n\t\t\t\t}) }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu />\r\n\t\t\t<div className=\"mt-3 row ml-2 mr-2 mt-2\">\r\n\t\t\t\t{isLoadingUserDetail ? \"Loading\" : leftPannel() }\r\n\t\t\t\t{isLoadingPostList ? \"Loading\" : rightPannel() }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RandomProfile","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Profile.js",["138","139","140","141","142"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router\"\r\nimport {useLocation} from 'react-router-dom'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport Menu from \"../core/Menu\"\r\nimport PrivatePost from './PrivatePost'\r\n\r\nimport {getUserDetails, getAllPostOfUser} from '../core/helper/coreapicalls'\r\nimport { isAutheticated } from \"../auth/helper\";\r\n\r\n\r\nfunction Profile() {\r\n\r\n\tlet  userId  = isAutheticated().user._id;\r\n\r\n\tconst [isLoadingUserDetail, setLoadingUserDetail] = useState(true);\r\n\tconst [isLoadingPostList, setLoadingPostList] = useState(true);\r\n\r\n\tconst [userdata, setUserData] = useState({});\r\n\tconst [allpost, setAllPost] = useState([]);\r\n\tconst [reload, setReload] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingUserDetail(true);\r\n\t\tgetUserDetails(userId).then(x => {\r\n\t\t\tif(x.error) alert(\"Error!! Cant find user\");\r\n\t\t\telse {\r\n\t\t\t\tsetUserData(x);\r\n\t\t\t\tconsole.log(\"Userdata\", x)\r\n\t\t\t\tsetLoadingUserDetail(false);\r\n\t\t\t}\r\n\t\t})\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingPostList(true);\r\n\t\tgetAllPostOfUser(userId).then(x => {\r\n\t\t\tif(x.error) alert(\"Error\", x.error)\r\n\t\t\telse {\r\n\t\t\t\tsetAllPost(x);\r\n\t\t\t\tsetLoadingPostList(false);\r\n\t\t\t}\r\n\t\t})\r\n\t}, [])\r\n\r\n\tfunction leftPannel() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-md-4\">\r\n\t\t\t  \t<div className=\"card text-white bg-dark border border-info \">\r\n\t\t\t\t    <div className=\"card-header lead d-flex justify-content-between align-items-center\">\r\n\t\t\t\t    \t<h4 className=\"d-flex flex-row\">@{userdata.username}</h4>\r\n\t\t\t\t    \t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t    \t\t<Link to=\"/update\">\r\n\t\t\t\t    \t\t\t<button type=\"button\" data-toggle=\"modal\" data-target=\"#edit\" data-uid=\"1\" className=\"update btn btn-warning btn-sm\"><span className=\"glyphicon glyphicon-edit\"> Edit</span></button>\r\n\t\t\t\t    \t\t</Link>\r\n\t\t\t\t    \t</div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"card-body\">\r\n\t\t\t\t      \t<div className=\"rounded border border-white p-2\">\r\n\t\t\t\t           \t<img src=\"https://i.imgur.com/UXdKE3o.jpg\" style={{ maxHeight: \"50%\", maxWidth: \"100%\" }} className=\"mb-3 rounded\" />\r\n\t\t\t\t        </div>\r\n\t\t\t\t      \t<p className=\"lead bg-white font-weight-bold text-dark text-wrap\"><center>{userdata.email}</center></p>\r\n\r\n\t\t\t\t      \t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t      \t\t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t      \t\t\t<Link to=\"/followers\">\r\n\t\t\t\t      \t\t\t\t<button className=\"btn btn-danger\"> {userdata.followers.length} Followers</button>\r\n\t\t\t\t      \t\t\t</Link>\r\n\t\t\t\t      \t\t</div>\r\n\r\n\t\t\t\t      \t\t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t      \t\t\t<Link to=\"/following\" >\r\n\t\t\t\t      \t\t\t\t<button className=\"btn btn-danger\"> {userdata.follows.length} Following</button>\r\n\t\t\t\t      \t\t\t</Link>\r\n\t\t\t\t      \t\t</div>\r\n\t\t\t\t      \t</div>\r\n\r\n\t\t\t\t      \t<hr/>\r\n\t\t\t\t      \t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t      \t\t<p className=\"d-flex justify-content-around text-light float-left\">\r\n\t\t\t\t      \t\t\t<h5 className=\"text-muted mr-1\">Name : </h5> \r\n\t\t\t\t      \t\t\t{userdata.firstname ? userdata.firstname : 'Firstname' } {userdata.lastname ? userdata.lastname : 'Lastname' }\r\n\t\t\t\t      \t\t</p>\r\n\t\t\t\t      \t</div><hr/>\r\n\t\t\t\t      \t<div className=\"d-flex justify-content-around\">\r\n\t\t\t\t      \t\t<h5 className=\"text-light float-left\"><span className=\"text-muted\">Posts</span> {userdata.posts.length}</h5>\r\n\t\t\t\t      \t</div><hr/>\r\n\t\t\t\t      \t\r\n\t\t\t\t    </div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tfunction rightPannel() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-8\">\r\n\t\t\t\t{ allpost.map((post, index) => {\r\n\t\t\t\t  return (\r\n\t\t\t\t    <div key={index} className=\"col-\">\r\n\t\t\t\t      <PrivatePost key={index} post={post} reload={reload} setReload={setReload} />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  );\r\n\t\t\t\t}) }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu />\r\n\t\t\t<div className=\"mt-3 row ml-2 mr-2 mt-2\">\r\n\t\t\t\t{isLoadingUserDetail ? \"Loading...\" : leftPannel() }\r\n\t\t\t\t{isLoadingPostList ? \"Loading...\" : rightPannel() }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Followers.js",["143","144","145","146"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Menu from '../core/Menu'\r\nimport UserBox from './UserBox';\r\n\r\nimport { getFollwerList } from '../core/helper/coreapicalls';\r\nimport { isAutheticated } from \"../auth/helper\";\r\n\r\n\r\nfunction Followers() {\r\n\r\n\tconst [followerList, setFollowerList] = useState([]);\r\n\tconst [loading, setIsLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [reload, setReload] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tgetFollwerList(isAutheticated().user._id)\r\n\t\t\t.then(x => {\r\n\t\t\t\tif(x.error) setError(x.error)\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetFollowerList(x);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}, [reload])\r\n\r\n\tfunction rightPannel() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-8 offset-2 \">\r\n\t\t      <div className=\"panel\" id=\"followers\">\r\n\t\t        <div className=\"panel-heading\">\r\n\t\t          <h3 className=\"panel-title mt-5 mb-5 text-center\">\r\n\t\t            <i className=\"icon md-check\" aria-hidden=\"true\"></i> Followers {followerList.length}\r\n\t\t          </h3>\r\n\t\t        </div>\r\n\t\t        <div className=\"panel-body\">\r\n\t\t          <ul className=\"list-group list-group-dividered list-group-full\">\r\n\r\n\t\t          {followerList.map(function(value, index){\r\n\t\t              return (\r\n  \t          \t\t\t<li className=\"list-group-item\" key={index}>\r\n  \t          \t\t\t  <div className=\"media\">\r\n  \t          \t\t\t    <div className=\"media-left\">\r\n  \t          \t\t\t    <Link to={{ pathname: '/user' , state : {id : value._id} }}>\r\n  \t          \t\t\t     \t<div className=\"avatar avatar-online\">\r\n  \t          \t\t\t     \t  <img className=\"rounded-circle\" src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\" width=\"60\" height=\"60\" />\r\n  \t          \t\t\t     \t</div>\r\n  \t          \t\t\t    </Link>\r\n  \t          \t\t\t      \r\n  \t          \t\t\t    </div>\r\n  \t          \t\t\t    <div className=\"media-body\">\r\n  \t          \t\t\t      <div className=\"pull-right\">\r\n  \t\t          \t\t\t    <Link to={{ pathname: '/user' , state : {id : value._id} }}>\r\n  \t\t          \t\t\t      \t<button className=\"btn btn-info btn-sm waves-effect waves-light\"> Profile</button>\r\n  \t\t          \t\t\t    </Link>\r\n  \t          \t\t\t      </div>\r\n  \t          \t\t\t      <div>\r\n  \t          \t\t\t      \t<Link to={{ pathname: '/user' , state : {id : value._id} }}>\r\n  \t          \t\t\t      \t  \t<p className=\"mt-2 ml-3 waves-effect waves-light\"> @{value.username}</p>\r\n  \t          \t\t\t      \t</Link>\r\n  \t          \t\t\t      </div>\r\n  \t          \t\t\t      <small className=\"ml-3\">{value.email }</small>\r\n  \t          \t\t\t    </div>\r\n  \t          \t\t\t  </div>\r\n  \t          \t\t\t</li>\r\n\t\t              )\r\n\t\t          })}\r\n\r\n\t\t          </ul>\r\n\t\t        </div>\r\n\t\t      </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t \r\n\treturn (\r\n\r\n\t\t<div>\r\n\t\t\t<Menu />\r\n\t\t\t{loading ? \r\n\t\t\t\t( <h1>Loading ...</h1>) \r\n\t\t\t\t: \r\n\t\t\t\t(<div className=\"row\">\r\n\t\t\t\t\t{rightPannel()}\r\n\t\t\t\t</div>)\r\n\t\t\t}\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Followers\r\n\r\n\r\n\r\n\r\n// <pre>\r\n// \t{followerList.map(function(value, index){\r\n// \t    return (<li key={index}>{value.email}</li>)\r\n// \t})}\r\n// </pre>","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Following.js",["147","148","149","150"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Menu from '../core/Menu'\r\nimport UserBox from './UserBox';\r\n\r\nimport { getfollowingList } from '../core/helper/coreapicalls';\r\nimport { isAutheticated } from \"../auth/helper\";\r\n\r\n\r\nfunction Following() {\r\n\r\n\tconst [followingList, setFollowingList] = useState([]);\r\n\tconst [loading, setIsLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [reload, setReload] = useState(false);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tconsole.log(\"Isfollowing 1\")\r\n\t\tgetfollowingList(isAutheticated().user._id)\r\n\t\t\t.then(x => {\r\n\t\t\t\tif(x.error) setError(x.error)\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetFollowingList(x);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}, [reload])\r\n\r\n\r\n\tfunction rightPannel() {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-8 offset-2 \">\r\n\t\t      <div className=\"panel\" id=\"followers\">\r\n\t\t        <div className=\"panel-heading\">\r\n\t\t          <h3 className=\"panel-title mt-5 mb-5 text-center\">\r\n\t\t            <i className=\"icon md-check\" aria-hidden=\"true\"></i> Following List {followingList.length}\r\n\t\t          </h3>\r\n\t\t        </div>\r\n\t\t        <div className=\"panel-body\">\r\n\t\t          <ul className=\"list-group list-group-dividered list-group-full\">\r\n\r\n\t\t          {followingList.map(function(value, index){\r\n\t\t              return (\r\n\t\t              \t<UserBox key={index} user={value} reload={reload} setReload={setReload} />\r\n\t\t              )\r\n\t\t          })}\r\n\r\n\t\t          </ul>\r\n\t\t        </div>\r\n\t\t      </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t \r\n\treturn (\r\n\r\n\t\t<div>\r\n\t\t\t<Menu />\r\n\t\t\t{loading ? \r\n\t\t\t\t( <h1></h1>) \r\n\t\t\t\t: \r\n\t\t\t\t(<div className=\"row\">\r\n\t\t\t\t\t{rightPannel()}\r\n\t\t\t\t</div>)\r\n\t\t\t}\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Following\r\n\r\n\r\n\r\n\r\n// <pre>\r\n// \t{followerList.map(function(value, index){\r\n// \t    return (<li key={index}>{value.email}</li>)\r\n// \t})}\r\n// </pre>","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\Comments.js",["151","152","153","154","155","156"],"import React, {useState, useEffect} from 'react';\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from '../core/Menu'\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport { getAllComments } from '../core/helper/coreapicalls';\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { createComments } from '../core/helper/coreapicalls';\r\n\r\n\r\n\r\nfunction Comments (props) {\r\n\r\n\tlet post  = useLocation()?.state?.post;\r\n\tlet history = useHistory();\r\n\r\n\tconst [comments, setComments] = useState([]);\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [error, setError] = useState(false);\r\n\tconst [reload, setReload] = useState(false);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!post) return <Redirect to=\"/\" />; // Force user if mannual search\r\n\t\tsetReload(false);\r\n\t\tgetAllComments(post._id).then(x => {\r\n\t\t\tif(x.error) setError(x.error);\r\n\t\t\telse setComments(x)\r\n\t\t})\r\n\t}, [reload])\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tif(isAutheticated()) {\r\n\t\t\tif(description.length < 1) { //If length is 0, just return;\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tsetReload(false);\r\n\t\t\tcreateComments(description, post._id ).then(x => {\r\n\t\t\t\tif(x.error) setError(x.error)\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetDescription('');\r\n\t\t\t\t\tsetReload(true);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\thistory.push('/signin');\r\n\t\t}\r\n\t}\r\n\r\n\tconst PostBox = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"feed-post mt-2 \">\r\n\t\t\t    <div className=\"p-2 bg-white\">\r\n\t\t\t        <div className=\"d-flex flex-row justify-content-between align-items-start profile\">\r\n\t\t\t        \t<Link to={{ pathname: '/user' , state : {id : post.createdBy} }}>\r\n\t\t\t\t            <div className=\"d-flex align-items-center\">\r\n\t\t\t\t              <img className=\"rounded-circle img-responsive\" src=\"https://i.imgur.com/44HzzUN.jpg\" width=\"50\" height=\"50\" />\r\n\t\t\t\t              <div className=\"d-flex flex-column ml-2\"> <h6>{ post.userData[0].username}</h6></div>\r\n\t\t\t\t            </div>\r\n\t\t\t            </Link>\r\n\t\t\t\t        <div className=\"ml-2 float-right float-lg-right\">\r\n\t     \t\t\t       \t<h6><Moment fromNow>{post.createdAt}</Moment></h6>\r\n\t\t\t\t        </div>\r\n\r\n\t\t\t        </div>\r\n\r\n\t\t\t        <div className=\"profile-content mt-4 mb-4\">\r\n\t\t\t          <span>{post.description}</span>\r\n\t\t\t        </div>\r\n\t\t\t        <hr/>\r\n\t\t\t        <div className=\"profile-engagements\">\r\n\t\t\t          <div className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t            <div className=\"d-flex flex-row icons d-flex align-items-center\">\r\n\t\t\t              <span><i className=\"fa fa-heart\"></i> Likes</span> \r\n\t\t\t            </div>\r\n\t\t\t            <Link to={{ pathname: '/comments' , state : {post : props.post} }}>\r\n\t\t\t\t            <div className=\"d-flex flex-row muted-color\"> \r\n\t\t\t\t              <span><i className=\"fa fa-comment\"></i> comments</span>\r\n\t\t\t\t            </div>\r\n\t\t\t            </Link>\r\n\t\t\t          </div>\r\n\t\t\t        </div>\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tfunction Comments () {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{ comments.map((comment, index) => {\r\n\t\t\t\t  return (\r\n\t\t\t\t    <div key={index} className=\"col-8 mb-4 offset-1\">\r\n\t\t\t\t      <div className=\" mt-4 mb-5\">\r\n\t      \t\t\t        <div className=\"panel panel-default\">\r\n\t      \t\t\t            <div className=\"panel-body\">\r\n\t      \t\t\t               <section className=\"post-heading\">\r\n\t      \t\t\t                    <div className=\"row\">\r\n\t      \t\t\t                        <div className=\"col-md-11\">\r\n\t      \t\t\t                            <div className=\"media\">\r\n\t      \t\t\t                              <div className=\"media-left pr-3\">\r\n\t      \t\t\t                              \t<Link to={{ pathname: '/user' , state : {id : comment.createdBy} }}>\r\n\t      \t\t\t                                  <img className=\"media-object photo-profile\" src=\"http://0.gravatar.com/avatar/38d618563e55e6082adf4c8f8c13f3e4?s=40&d=mm&r=g\" width=\"50\" height=\"50\" />\r\n\t      \t\t\t                                </Link>\r\n\t      \t\t\t                              </div>\r\n\t      \t\t\t                              <div className=\"media-body\">\r\n\t      \t\t\t                              \t<Link to={{ pathname: '/user' , state : {id : comment.createdBy} }}>\r\n\t      \t\t\t                                \t<a href=\"#\" className=\"anchor-username\"><h4 className=\"media-heading\"> @{comment.userData[0].username}</h4></a> \r\n\t      \t\t\t                                </Link>\r\n\t      \t\t\t                                <Moment fromNow>{comment.createdAt}</Moment>\r\n\t      \t\t\t                              </div>\r\n\t      \t\t\t                            </div>\r\n\t      \t\t\t                        </div>\r\n\t      \t\t\t                         <div className=\"col-md-1\">\r\n\t      \t\t\t                             <a href=\"#\"><i className=\"glyphicon glyphicon-chevron-down\"></i></a>\r\n\t      \t\t\t                         </div>\r\n\t      \t\t\t                    </div>             \r\n\t      \t\t\t               </section>\r\n\t      \t\t\t               <hr/>\r\n\t      \t\t\t               <section className=\"post-body\">\r\n\t      \t\t\t                   <p>{comment.description}</p>\r\n\t      \t\t\t               </section>\r\n\t      \t\t\t               \r\n\t      \t\t\t            </div>\r\n\t      \t\t\t        </div>   \r\n\t      \t\t\t\t</div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  );\r\n\t\t\t\t}) }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<Menu />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"share border bg-white col-8 feed-post mt-2 border offset-2\">\r\n\t\t\t\t    {PostBox()}\r\n\t\t\t    \t<div className=\"share border bg-white col-12 feed-post  border\" style={{ 'margin-bottom' : '10%'}}>\r\n\t\t\t    \t    <form action='/signin' method=\"post\">\r\n\t\t\t    \t\t    <div className=\"d-flex flex-row inputs p-2 py-2\">\r\n\t\t\t    \t\t      <input type=\"text\" required value={description} onChange={e => setDescription(e.target.value)} name=\"description\" className=\"border-0 form-control share-input mt-4 ml-4 mb-4\" placeholder=\"Share your thoughts\" />\r\n\t\t\t    \t\t    </div>\r\n\t\t\t    \t\t    <div className=\" flex-row  border-top\">\r\n\t\t\t    \t\t        <div className=\"publish-button mt-2\">\r\n\t\t\t    \t\t        \t<button className=\"align-items-center float-right btn btn-dark btn-block mb-2\" onClick={e => handleSubmit(e)}>Add Comments</button>\r\n\t\t\t    \t\t        </div>\r\n\t\t\t    \t\t    </div>\r\n\t\t\t            </form>\r\n\t\t\t    \t</div>\r\n\t\t\t\t    {Comments()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Comments;","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\People.js",[],"C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\UserBox.js",["157","158","159","160"],"import React, { useState } from 'react'\r\nimport { createFollow, createUnFollow} from '../core/helper/coreapicalls'\r\n\r\n\r\nfunction UserBox ({user, key, reload, setReload}) {\r\n\r\n\tconst [isFollwing, setIsFollowing] = useState(true);\r\n\tconsole.log(\"UserBox\", user);\r\n\r\n\tfunction handleFollow() {\r\n\t\tcreateFollow(user._id).then(x => {\r\n\t\t\tif(x.error) return alert(`Error!! ${x.error}`)\r\n\t\t\tsetIsFollowing(true);\r\n\t\t\tsetReload(true);\r\n\t\t\treturn;\r\n\t\t})\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction handleUnfollow() {\r\n\t\tsetReload(false);\r\n\t\tcreateUnFollow(user._id).then(x => {\r\n\t\t\tif(x.error) return alert(`Error!! ${x.error}`)\r\n\t\t\tsetIsFollowing(false);\r\n\t\t\tsetReload(true);\r\n\t\t\treturn;\r\n\t\t})\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<li className=\"list-group-item mb-4\" key={key}>\r\n\t\t\t  <div className=\"media\">\r\n\t\t\t    <div className=\"media-left pr-3\">\r\n\t\t\t      <a className=\"avatar avatar-online\" href=\"javascript:void(0)\">\r\n\t\t\t        <img className=\"rounded-circle\" src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\" width=\"70\" height=\"70\" />\r\n\t\t\t        <i></i>\r\n\t\t\t      </a>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"media-body\">\r\n\t\t\t      <div className=\"pull-right\">\r\n\t\t\t      \t{isFollwing ? \r\n\t\t\t      \t\t<button className=\"btn btn-danger d-flex flex-row\" onClick={handleUnfollow}>Unfollow</button> \r\n\t\t\t      \t\t: \r\n\t\t\t      \t\t<button className=\"btn btn-primary d-flex flex-row\" onClick={handleFollow}>Follow</button>\r\n\t\t\t      \t}\r\n\t\t\t      </div>\r\n\t\t\t      <div><a className=\"name\" href=\"javascript:void(0)\">{user.username}</a></div>\r\n\t\t\t      <small>{user.email}</small>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</li>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserBox;","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\UpdateProfile.js",["161","162","163","164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\n\r\nimport Menu from \"../core/Menu\"\r\nimport { getUserDetails, updateUserInfo } from '../core/helper/coreapicalls';\r\nimport { isAutheticated } from \"../auth/helper\";\r\n\r\nfunction UpdateProfile() {\r\n\r\n\t let history = useHistory();\r\n\t const userId = isAutheticated().user._id;\r\n\r\n \t  const [userInfo, setUserInfo] = useState({});\r\n  \tconst [values, setValues] = useState({ firstname: \"\", lastname: \"\", email: \"\", error: \"\", success: false });\r\n  \tconst handleChange = name => event => setValues({ ...values, error: '', [name]: event.target.value });\r\n  \tconst { firstname, lastname, email, error, success } = values;\r\n\r\n  \tuseEffect(() => {\r\n    \tgetUserDetails(userId).then(x => {\r\n    \t\tif(x.error) { return alert(\"Unable to find user\") }\r\n    \t\telse {\r\n    \t\t\tsetValues({firstname : x.firstname, lastname : x.lastname, email : x.email});\r\n    \t\t\tsetUserInfo(x);\r\n    \t\t}\r\n    \t}).catch(err => alert(\"Error Unable to find user\"))\r\n  \t}, []);\r\n\r\n  \tfunction onSubmit (event)  {\r\n\t  \tevent.preventDefault();\r\n\t  \tsetValues({ ...values, error: false });\r\n\t  \tupdateUserInfo({...values}).then(data => {\r\n  \t      if (data.error) {\r\n  \t        \tsetValues({ ...values, error: data.error, success: false });\r\n  \t     \t} else {\r\n  \t        \tsetValues({ ...values, firstname: \"\", lastname: \"\", phone: \"\", email: '', calories_per_day: '', error: \"\", success: true});\r\n              return setTimeout( () => history.push('/profile'), 1000)\r\n  \t        }\r\n  \t    })\r\n  \t    .catch(console.log(\"Error in adding meal\"));\r\n  \t};\r\n\r\n  \tconst updateForm = () => {\r\n  \t  return (\r\n  \t  \t<div>\r\n  \t    <div style={{'margin-top' : '5%'}}><h1><center>Update</center></h1></div>\r\n\t  \t    <div className=\"row mt-5\">\r\n\t  \t      <div className=\"col-md-6 offset-sm-3 text-left\">\r\n\t  \t        <form>\r\n\r\n\t  \t          <div className=\"form-group\">\r\n\t  \t            <label>Firstname</label>\r\n\t  \t            <input className=\"form-control\" onChange={handleChange(\"firstname\")} type=\"text\" value={firstname} />\r\n\t  \t          </div>\r\n\r\n\t  \t          <div className=\"form-group\">\r\n\t  \t            <label>Lastname</label>\r\n\t  \t            <input className=\"form-control\" onChange={handleChange(\"lastname\")} type=\"text\" value={lastname} />\r\n\t  \t          </div>\r\n\r\n\t  \t          <div className=\"form-group\">\r\n\t  \t            <label>Email</label>\r\n\t  \t            <input className=\"form-control\" onChange={handleChange(\"email\")} type=\"email\" value={email} />\r\n\t  \t          </div>\r\n\r\n\t  \t          <button onClick={onSubmit} className=\"btn btn-success btn-block\"> Submit </button>\r\n\r\n\t  \t        </form>\r\n\t  \t      </div>\r\n  \t    </div>\r\n  \t    </div>\r\n  \t  );\r\n  \t};\r\n\r\n  \treturn (\r\n  \t\t<div>\r\n  \t\t\t<Menu />\r\n  \t\t\t{updateForm()}\r\n  \t\t</div>\r\n  \t)\r\n\r\n}\r\nexport default UpdateProfile","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\PrivatePost.js",["166","167"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from 'react-moment'\r\n\r\nimport Menu from '../core/Menu'\r\n\r\n\r\n\r\nfunction PrivatePost (props) {\r\n\r\n\treturn (\r\n\t\t<div className=\"feed-post mt-2 border\">\r\n\t\t    <div className=\"p-2 bg-white\">\r\n\t\t        <div className=\"d-flex flex-row justify-content-between align-items-start profile\">\r\n\t\t        \t<Link to={{ pathname: '/user' , state : {id : props.post.createdBy} }}>\r\n\t\t\t            <div className=\"d-flex flex-column align-items-center\">\r\n\t\t\t\t            <div className=\"d-flex\">\r\n\t\t\t\t            \t<img className=\"rounded-circle img-responsive\" src=\"https://i.imgur.com/44HzzUN.jpg\" width=\"50\" height=\"50\" />\r\n\t\t\t\t            \t<div className=\"mt-3 ml-3 text-reset\"> <h6> @{props.post.userData[0].username}</h6></div>\r\n\t\t\t\t            </div>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"d-flex\">\r\n\t\t\t        \t\t<h6 className=\"text-dark text-decoration-none\">Posted : <Moment fromNow>{props.post.createdAt}</Moment></h6>\r\n\t\t\t            </div>\r\n\t\t            </Link>\r\n\t\t\t        <div className=\"ml-2 float-right float-lg-right\">\r\n\t\t\t        \t<Link to={{ pathname: '/post/update' , state : {postId : props.post._id} }}>\r\n\t\t\t        \t\t<button type=\"button\" data-toggle=\"modal\" data-target=\"#edit\" data-uid=\"1\" className=\"update btn btn-warning btn-sm\"><span className=\"glyphicon glyphicon-edit\"> Edit</span></button>\r\n\t\t\t        \t</Link>\r\n\t\t\t        </div>\r\n\r\n\t\t        </div>\r\n\r\n\t\t        <div className=\"profile-content mt-4 mb-4\">\r\n\t\t          <span><h5>{props.post.description}</h5></span>\r\n\t\t        </div>\r\n\t\t        <hr/>\r\n\t\t        <div className=\"profile-engagements\">\r\n\t\t          <div className=\"d-flex justify-content-between align-items-center\">\r\n\t\t            <div className=\"d-flex flex-row icons d-flex align-items-center\">\r\n\t\t              <span><i className=\"fa fa-heart\"></i> Likes</span> \r\n\t\t            </div>\r\n\t\t            <Link to={{ pathname: '/comments' , state : {post : props.post} }}>\r\n\t\t\t            <div className=\"d-flex flex-row muted-color\"> \r\n\t\t\t              <span><i className=\"fa fa-comment\"></i> comments</span>\r\n\t\t\t            </div>\r\n\t\t            </Link>\r\n\t\t          </div>\r\n\t\t        </div>\r\n\t\t    </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PrivatePost","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\PostUpdate.js",["168","169","170"],"import React, {useState, useEffect} from 'react';\r\nimport {useLocation, useHistory, Redirect} from 'react-router-dom'\r\n\r\nimport { updatePost, getPostInfo } from '../core/helper/coreapicalls';\r\n\r\nfunction PostUpdate() {\r\n\r\n\tlet postId  = useLocation()?.state?.postId;\r\n\tlet history = useHistory();\r\n\r\n\r\n\tconst [desciption, setDesciption] = useState(\"\");\r\n\tconst [message, setMessage] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPostInfo(postId).then(x => {\r\n\t\t\tif(x.error) {\r\n\t\t\t\tsetMessage(x.error)\r\n\t\t\t\treturn setTimeout(() => {\r\n\t\t\t\t\thistory.push('/')\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetDesciption(x.description);\r\n\t\t\t}\r\n\t\t})\r\n\t},[]);\r\n\r\n  \tfunction onSubmit (event)  {\r\n\t  \tevent.preventDefault();\r\n\t  \tupdatePost(desciption, postId).then(x => {\r\n\t  \t\tif(x.error) setMessage(x.error)\r\n\t  \t\telse{\r\n\t  \t\t\tsetTimeout(() => {\r\n\t  \t\t\t\thistory.push('/profile')\r\n\t  \t\t\t}, 1000)\r\n\t  \t\t\tsetMessage(\"Post Updated Successfully!!\")\r\n\t  \t\t\tsetDesciption('')\r\n\t  \t\t}\r\n\t  \t})\r\n\t  \treturn;\r\n  \t};\r\n\r\n\r\n\r\n\r\n\tconst PostForm = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{message  && (\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t  \t<div className=\"col-md-6 offset-sm-3 text-left\">\r\n\t\t\t\t\t    \t<div className= {message == \"Post Updated Successfully!!\" ? \"alert alert-success\" : \"alert alert-danger\"} style={{ display: message ? \"\" : \"none\" }} >\r\n\t\t\t\t\t      \t{message}\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  \t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)} \r\n\t\t  \t    <div style={{'margin-top' : '5%'}}><h1><center>Update Post</center></h1></div>\r\n\t\t\t  \t    <div className=\"row mt-5\">\r\n\t\t\t  \t      <div className=\"col-md-6 offset-sm-3 text-left\">\r\n\t\t\t  \t        <form>\r\n\r\n\t\t\t  \t          <div className=\"form-group\">\r\n\t\t\t  \t            <label>Description</label>\r\n\t\t\t  \t            <input className=\"form-control\" onChange={e => setDesciption(e.target.value)} type=\"text\" value={desciption} />\r\n\t\t\t  \t          </div>\r\n\r\n\t\t\t  \t          <button onClick={onSubmit} className=\"btn btn-success btn-block\"> Submit </button>\r\n\r\n\t\t\t  \t        </form>\r\n\t\t\t  \t      </div>\r\n\t\t  \t    </div>\r\n\t  \t    </div>\r\n\t\t)\r\n\t}\r\n\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{PostForm()}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PostUpdate;","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\ForgetPassword.js",["171"],"import React, {useState} from 'react';\r\nimport Menu from \"../core/Menu\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { handleForgetPassword } from '../core/helper/coreapicalls';\r\n\r\n\r\nfunction ForgetPassword () {\r\n\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\r\n\tconst [data, setData] = useState({});\r\n\r\n\tconst handleClick = event => {\r\n\t\tevent.preventDefault();\r\n\t\thandleForgetPassword(email).then(x => {\r\n\t\t\tif(x.status === 400) {\r\n\t\t\t\tsetMessage(x.message);\r\n\t\t\t\tsetEmail('')\r\n\t\t\t}\r\n\t\t\telse if(x.status === 401) {\r\n\t\t\t\talert(x.message)\r\n\t\t\t\tsetEmail('')\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetMessage(x.message);\r\n\t\t\t\tsetData({token : x.token, id : x.id})\r\n\t\t\t\tsetEmail('')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst successMessage = () => (\r\n\t    <div className=\"col-8 mt-3\">\r\n\t      <div className=\"offset-4 text-left\">\r\n\t      \t{message.startsWith(\"Please\") ==true ?\r\n\t      \t\t<div className=\"alert alert-success\" style={{ display: message ? \"\" : \"none\" }} >\r\n\t      \t\t  <Link to={{ pathname: '/resetpassword' , state : {id : data.id, token : data.token} }}>This will is sent in email Click Here </Link>\r\n\t      \t\t</div>\r\n\t      \t : (\r\n\t      \t\t<div className=\"alert alert-success\" style={{ display: message ? \"\" : \"none\" }} >\r\n\t      \t\t  {message}\r\n\t      \t\t</div>\r\n\t      \t)}\r\n\t        \r\n\t      </div>\r\n\t    </div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu />\r\n\t\t    <div>\r\n\t\t\t    <div style={{'margin-top' : '5%'}} className=\"text-center\"><h1>Forget Password</h1></div>\r\n\r\n\t\t\t    <div className=\"text-center p-b-20 text-danger\" style={{'margin-top' : '5%'}}>\r\n\t\t\t        <span className=\"txt2\">\r\n\t\t\t            No Problem! Enter your email below and we will send you an email with instruction to reset your password.\r\n\t\t\t        </span>\r\n\t\t\t    </div>\r\n\r\n\t\t\t    {successMessage()}\r\n\r\n\t\t\t    <div className=\"row\" style={{'margin-top' : '5%'}}>\r\n\r\n\t\t\t      <div className=\"col-md-6 offset-sm-3 text-left\">\r\n\t\t\t        <form>\r\n\r\n\r\n\t\t\t          <div className=\"form-group\">\r\n\t\t\t            <label>Email</label>\r\n\t\t\t            <input value={email} required className=\"form-control\" type=\"email\" onChange={e => {setEmail(e.target.value); setMessage('');} } />\r\n\t\t\t          </div>\r\n\r\n\t\t\t          <button onClick={handleClick} className=\"btn btn-success btn-block\">Reset Link</button>\r\n\t\t\t        </form>\r\n\r\n\t\t\t      </div>\r\n\t\t\t    </div>\r\n\t\t    </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\HiteshKumar\\Desktop\\AddSkill\\AddSkill\\DS_Algo\\Hackathon\\hackathon2\\testfrontend\\src\\user\\ResetPassword.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":25,"column":15,"nodeType":"178","endLine":28,"endColumn":9},{"ruleId":"176","severity":1,"message":"177","line":28,"column":50,"nodeType":"178","endLine":31,"endColumn":9},{"ruleId":"176","severity":1,"message":"177","line":34,"column":72,"nodeType":"178","endLine":37,"endColumn":9},{"ruleId":"179","severity":1,"message":"180","line":35,"column":33,"nodeType":"181","messageId":"182","endLine":35,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":18},{"ruleId":"183","severity":1,"message":"187","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":14},{"ruleId":"183","severity":1,"message":"188","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":16},{"ruleId":"183","severity":1,"message":"189","line":6,"column":18,"nodeType":"185","messageId":"186","endLine":6,"endColumn":30},{"ruleId":"183","severity":1,"message":"190","line":16,"column":9,"nodeType":"185","messageId":"186","endLine":16,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":25,"column":17,"nodeType":"181","messageId":"182","endLine":25,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":62,"column":11,"nodeType":"193","endLine":62,"endColumn":94},{"ruleId":"183","severity":1,"message":"194","line":14,"column":11,"nodeType":"185","messageId":"186","endLine":14,"endColumn":15},{"ruleId":"172","replacedBy":"195"},{"ruleId":"174","replacedBy":"196"},{"ruleId":"179","severity":1,"message":"180","line":63,"column":25,"nodeType":"181","messageId":"182","endLine":63,"endColumn":27},{"ruleId":"183","severity":1,"message":"197","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":17,"column":18,"nodeType":"193","endLine":17,"endColumn":128},{"ruleId":"183","severity":1,"message":"198","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":39,"column":5,"nodeType":"201","endLine":39,"endColumn":17,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"200","line":52,"column":5,"nodeType":"201","endLine":52,"endColumn":7,"suggestions":"203"},{"ruleId":"179","severity":1,"message":"180","line":57,"column":23,"nodeType":"181","messageId":"182","endLine":57,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":67,"column":5,"nodeType":"201","endLine":67,"endColumn":7,"suggestions":"204"},{"ruleId":"191","severity":1,"message":"192","line":102,"column":17,"nodeType":"193","endLine":102,"endColumn":134},{"ruleId":"183","severity":1,"message":"198","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":19},{"ruleId":"183","severity":1,"message":"205","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":20},{"ruleId":"199","severity":1,"message":"206","line":35,"column":5,"nodeType":"201","endLine":35,"endColumn":7,"suggestions":"207"},{"ruleId":"199","severity":1,"message":"206","line":46,"column":5,"nodeType":"201","endLine":46,"endColumn":7,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"192","line":62,"column":17,"nodeType":"193","endLine":62,"endColumn":134},{"ruleId":"183","severity":1,"message":"184","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"209","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":15},{"ruleId":"183","severity":1,"message":"190","line":16,"column":9,"nodeType":"185","messageId":"186","endLine":16,"endColumn":14},{"ruleId":"183","severity":1,"message":"210","line":17,"column":17,"nodeType":"185","messageId":"186","endLine":17,"endColumn":26},{"ruleId":"183","severity":1,"message":"211","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"190","line":16,"column":9,"nodeType":"185","messageId":"186","endLine":16,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":64,"column":7,"nodeType":"193","endLine":64,"endColumn":11},{"ruleId":"183","severity":1,"message":"190","line":22,"column":9,"nodeType":"185","messageId":"186","endLine":22,"endColumn":14},{"ruleId":"199","severity":1,"message":"214","line":33,"column":5,"nodeType":"201","endLine":33,"endColumn":13,"suggestions":"215"},{"ruleId":"191","severity":1,"message":"192","line":64,"column":19,"nodeType":"193","endLine":64,"endColumn":129},{"ruleId":"191","severity":1,"message":"192","line":110,"column":45,"nodeType":"193","endLine":110,"endColumn":196},{"ruleId":"216","severity":1,"message":"217","line":115,"column":44,"nodeType":"193","endLine":115,"endColumn":84},{"ruleId":"216","severity":1,"message":"217","line":122,"column":40,"nodeType":"193","endLine":122,"endColumn":52},{"ruleId":"216","severity":1,"message":"217","line":37,"column":10,"nodeType":"193","endLine":37,"endColumn":72},{"ruleId":"218","severity":1,"message":"219","line":37,"column":51,"nodeType":"178","messageId":"220","endLine":37,"endColumn":71},{"ruleId":"216","severity":1,"message":"217","line":50,"column":15,"nodeType":"193","endLine":50,"endColumn":61},{"ruleId":"218","severity":1,"message":"219","line":50,"column":40,"nodeType":"178","messageId":"220","endLine":50,"endColumn":60},{"ruleId":"183","severity":1,"message":"205","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":20},{"ruleId":"183","severity":1,"message":"221","line":13,"column":12,"nodeType":"185","messageId":"186","endLine":13,"endColumn":20},{"ruleId":"183","severity":1,"message":"190","line":16,"column":40,"nodeType":"185","messageId":"186","endLine":16,"endColumn":45},{"ruleId":"183","severity":1,"message":"222","line":16,"column":47,"nodeType":"185","messageId":"186","endLine":16,"endColumn":54},{"ruleId":"199","severity":1,"message":"206","line":26,"column":7,"nodeType":"201","endLine":26,"endColumn":9,"suggestions":"223"},{"ruleId":"183","severity":1,"message":"197","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":18,"column":18,"nodeType":"193","endLine":18,"endColumn":128},{"ruleId":"183","severity":1,"message":"184","line":2,"column":34,"nodeType":"185","messageId":"186","endLine":2,"endColumn":42},{"ruleId":"199","severity":1,"message":"224","line":27,"column":4,"nodeType":"201","endLine":27,"endColumn":6,"suggestions":"225"},{"ruleId":"179","severity":1,"message":"180","line":53,"column":36,"nodeType":"181","messageId":"182","endLine":53,"endColumn":38},{"ruleId":"179","severity":1,"message":"180","line":37,"column":39,"nodeType":"181","messageId":"182","endLine":37,"endColumn":41},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Moment' is defined but never used.","'signin' is defined but never used.","'authenticate' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.",["226"],["227"],"'Menu' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["228"],["229"],["230"],"'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["231"],["232"],"'UserBox' is defined but never used.","'setReload' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.",["233"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'userInfo' is assigned a value but never used.","'success' is assigned a value but never used.",["234"],"React Hook useEffect has missing dependencies: 'history' and 'postId'. Either include them or remove the dependency array.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},{"desc":"241","fix":"242"},{"desc":"241","fix":"243"},{"desc":"244","fix":"245"},{"desc":"241","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [history, isFollwing, userId]",{"range":"249","text":"250"},"Update the dependencies array to be: [history, userId]",{"range":"251","text":"252"},{"range":"253","text":"252"},"Update the dependencies array to be: [userId]",{"range":"254","text":"255"},{"range":"256","text":"255"},"Update the dependencies array to be: [post, reload]",{"range":"257","text":"258"},{"range":"259","text":"255"},"Update the dependencies array to be: [history, postId]",{"range":"260","text":"261"},[1174,1186],"[history, isFollwing, userId]",[1469,1471],"[history, userId]",[1780,1782],[997,999],"[userId]",[1213,1215],[977,985],"[post, reload]",[1044,1046],[635,637],"[history, postId]"]